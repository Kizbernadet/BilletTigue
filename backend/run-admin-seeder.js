/**
 * Script pour ex√©cuter le seeder de cr√©ation de l'administrateur
 * 
 * Ce script configure les variables d'environnement et ex√©cute le seeder
 * pour cr√©er le compte administrateur par d√©faut
 */

require('dotenv').config();

const { exec } = require('child_process');
const path = require('path');

async function runAdminSeeder() {
    console.log('üöÄ EX√âCUTION DU SEEDER ADMIN');
    console.log('============================');
    
    // V√©rifier les variables d'environnement
    console.log('üîç V√©rification des variables d\'environnement...');
    
    const requiredEnvVars = [
        'ADMIN_EMAIL',
        'ADMIN_PWD', 
        'ADMIN_LAST_NAME',
        'ADMIN_FIRST_NAME'
    ];
    
    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
    
    if (missingVars.length > 0) {
        console.error('‚ùå Variables d\'environnement manquantes:');
        missingVars.forEach(varName => {
            console.error(`   - ${varName}`);
        });
        console.log('\nüìã Variables requises dans votre fichier .env:');
        console.log('ADMIN_EMAIL=admin@billettigue.com');
        console.log('ADMIN_PWD=VotreMotDePasse123!');
        console.log('ADMIN_LAST_NAME=Nom');
        console.log('ADMIN_FIRST_NAME=Prenom');
        process.exit(1);
    }
    
    console.log('‚úÖ Toutes les variables d\'environnement sont pr√©sentes');
    console.log(`üìß Email admin: ${process.env.ADMIN_EMAIL}`);
    console.log(`üë§ Nom: ${process.env.ADMIN_FIRST_NAME} ${process.env.ADMIN_LAST_NAME}`);
    
    // Ex√©cuter le seeder
    console.log('\nüîÑ Ex√©cution du seeder...');
    
    const seederPath = path.join(__dirname, 'seeders', '20240620-create-admin.js');
    const command = `npx sequelize-cli db:seed --seed 20240620-create-admin.js`;
    
    return new Promise((resolve, reject) => {
        exec(command, { cwd: __dirname }, (error, stdout, stderr) => {
            if (error) {
                console.error('‚ùå Erreur lors de l\'ex√©cution du seeder:', error.message);
                if (stderr) {
                    console.error('D√©tails de l\'erreur:', stderr);
                }
                reject(error);
                return;
            }
            
            console.log('üìÑ Sortie du seeder:');
            console.log(stdout);
            
            if (stderr) {
                console.log('‚ö†Ô∏è  Avertissements:');
                console.log(stderr);
            }
            
            console.log('‚úÖ Seeder ex√©cut√© avec succ√®s !');
            resolve(stdout);
        });
    });
}

// Fonction principale
async function main() {
    try {
        await runAdminSeeder();
        console.log('\nüéâ COMPTE ADMINISTRATEUR CR√â√â AVEC SUCC√àS !');
        console.log('Vous pouvez maintenant vous connecter avec:');
        console.log(`üìß Email: ${process.env.ADMIN_EMAIL}`);
        console.log(`üîê Mot de passe: [celui d√©fini dans ADMIN_PWD]`);
        
    } catch (error) {
        console.error('\n‚ùå √âCHEC DE LA CR√âATION DU COMPTE ADMIN');
        console.error('Erreur:', error.message);
        process.exit(1);
    }
}

// Ex√©cution si appel√© directement
if (require.main === module) {
    main();
}

module.exports = { runAdminSeeder }; 