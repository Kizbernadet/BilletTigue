================================================================================
                    INFORMATIONS DÉVELOPPEMENT - BILLETTIGUE
================================================================================

📅 Date de création : 2024-06-20
🔧 Environnement : Développement
📋 Version : 1.0.0
🔄 Dernière mise à jour : 2024-12-14 (Nettoyage du projet)

================================================================================
                            🔐 COMPTE ADMINISTRATEUR
================================================================================

⚠️  ATTENTION : Ces informations sont pour le développement uniquement !
   Ne jamais utiliser ces identifiants en production !

📧 Email : admin@billettigue.com
🔑 Mot de passe : Admin123!
👤 Nom : Dupont
👤 Prénom : Jean
🏷️  Rôle : admin
📊 Statut : actif

================================================================================
                            🗄️  BASE DE DONNÉES
================================================================================

🔌 Type : PostgreSQL
🌐 Hôte : localhost
🔢 Port : 5432
📁 Base : billettigue_db
👤 Utilisateur : your_username
🔑 Mot de passe : your_password

📋 Tables principales :
- roles (id, name, description, createdAt, updatedAt)
- comptes (id, email, motDePasse, statut, roleId, createdAt, updatedAt)
- administrateurs (id, nom, prenom, compteId, createdAt, updatedAt)

================================================================================
                            🚀 SERVEUR BACKEND
================================================================================

🌐 URL : http://localhost:5000
🔌 Port : 5000
📡 API Base : http://localhost:5000/api
🔧 Environnement : development

📋 Endpoints principaux :
- POST /api/auth/register - Inscription
- POST /api/auth/login - Connexion
- POST /api/auth/logout - Déconnexion
- GET /api/profile - Profil utilisateur
- PUT /api/profile - Mise à jour profil

================================================================================
                            🛠️  COMMANDES UTILES
================================================================================

# Démarrer le serveur
npm start
npm run dev
npm run dev:debug

# Créer l'administrateur
npm run setup-admin

# Démarrer en production
npm run prod

================================================================================
                            📁 STRUCTURE DES FICHIERS
================================================================================

backend/
├── config/
│   ├── database.js          # Configuration DB
│   └── connection.js        # Connexion DB
├── controllers/
│   ├── authController.js    # Contrôleur auth
│   ├── profileController.js # Contrôleur profil
│   └── notificationController.js # Contrôleur notifications
├── models/
│   ├── role.js             # Modèle Role
│   ├── compte.js           # Modèle Compte
│   ├── administrateur.js   # Modèle Admin
│   └── [autres modèles]    # Autres modèles de données
├── routes/
│   ├── authRoutes.js       # Routes auth
│   ├── profileRoutes.js    # Routes profil
│   └── notificationRoutes.js # Routes notifications
├── services/
│   ├── authService.js      # Service auth
│   ├── profileService.js   # Service profil
│   └── notificationService.js # Service notifications
├── middlewares/
│   ├── authMiddleware.js   # Middleware auth
│   └── roleMiddleware.js   # Middleware rôles
├── seeders/
│   └── 20240620-create-admin.js  # Seeder admin
├── scripts/
│   └── setup-admin.js      # Script setup admin
├── tests/
│   ├── README.md           # Guide des tests
│   ├── tests_effectues/    # Guides de test utiles
│   └── tests_rapports/     # Rapports de test récents
├── .env                    # Variables d'environnement
├── server.js               # Serveur principal
├── package.json            # Dépendances
├── DEV_INFO.txt            # Ce fichier
├── QUICK_START_ADMIN.md    # Guide rapide admin
└── SEEDER_README.md        # Documentation seeder

================================================================================
                            🔧 CONFIGURATION ENV
================================================================================

# Copier ce contenu dans votre fichier .env

DB_HOST=localhost
DB_PORT=5432
DB_NAME=billettigue_db
DB_USER=your_username
DB_PASS=your_password

JWT_SECRET=your_jwt_secret_key_here

ADMIN_EMAIL=admin@billettigue.com
ADMIN_PWD=Admin123!
ADMIN_NOM=Dupont
ADMIN_PRENOM=Jean

PORT=5000
NODE_ENV=development

================================================================================
                            🧪 TESTS ET DÉVELOPPEMENT
================================================================================

# Tester l'API
curl -X POST http://localhost:5000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"admin@billettigue.com","password":"Admin123!"}'

# Vérifier la base de données
psql -h localhost -U your_username -d billettigue_db

# Requête pour vérifier l'admin
SELECT c.email, c.statut, r.name as role, a.nom, a.prenom 
FROM comptes c 
INNER JOIN administrateurs a ON c.id = a.compteId 
INNER JOIN roles r ON c.roleId = r.id 
WHERE r.name = 'admin';

================================================================================
                            🔍 DÉPANNAGE
================================================================================

❌ Erreur : Variables d'environnement manquantes
✅ Solution : Vérifier le fichier .env

❌ Erreur : Connexion à la base de données
✅ Solution : Vérifier PostgreSQL et les paramètres de connexion

❌ Erreur : Rôle admin inexistant
✅ Solution : npm run setup-admin (crée automatiquement le rôle)

❌ Erreur : Email déjà utilisé
✅ Solution : Utiliser un email différent ou supprimer le compte existant

❌ Erreur : CORS
✅ Solution : Le backend accepte les requêtes depuis localhost

================================================================================
                            📱 FRONTEND
================================================================================

🌐 URL : http://localhost (selon votre serveur web)
📄 Pages principales :
- /index.html - Page d'accueil
- /pages/login.html - Connexion
- /pages/register.html - Inscription
- /pages/admin-dashboard.html - Dashboard admin

🔧 Configuration API frontend :
- URL de base : http://localhost:5000/api
- Headers : Content-Type: application/json

================================================================================
                            🔐 SÉCURITÉ
================================================================================

⚠️  POINTS IMPORTANTS :

1. Mot de passe hashé avec bcrypt (12 rounds)
2. Tokens JWT pour l'authentification
3. Validation des données côté serveur
4. Protection CORS configurée
5. Variables d'environnement pour les secrets

🚨 EN PRODUCTION :
- Changer tous les mots de passe par défaut
- Utiliser des variables d'environnement sécurisées
- Configurer HTTPS
- Limiter l'accès à la base de données
- Activer les logs de sécurité

================================================================================
                            📚 RESSOURCES
================================================================================

📖 Documentation :
- SEEDER_README.md - Documentation complète du seeder
- QUICK_START_ADMIN.md - Guide rapide pour l'admin
- tests/README.md - Guide des tests
- tests/tests_effectues/ - Guides de test pratiques

🎯 Scripts disponibles :
- setup-admin.js - Configuration automatique de l'admin

================================================================================
                            🧹 NETTOYAGE RÉCENT
================================================================================

✅ Fichiers supprimés (obsolètes) :
- Scripts de test temporaires
- Rapports de test anciens
- Scripts de restructuration DB obsolètes
- Fichiers de configuration redondants

✅ Fichiers conservés (essentiels) :
- Configuration principale
- Modèles et contrôleurs
- Services et middlewares
- Documentation utile
- Scripts de setup essentiels

================================================================================
                            📝 NOTES DE DÉVELOPPEMENT
================================================================================

📌 Points à retenir :
- L'admin est créé automatiquement avec le script setup-admin
- Les timestamps sont ajoutés automatiquement si manquants
- Le rôle admin est créé automatiquement si inexistant
- Le script est idempotent (peut être exécuté plusieurs fois)
- Toutes les erreurs sont gérées avec rollback automatique

🔄 Workflow de développement :
1. Configurer .env
2. npm run setup-admin
3. npm run dev
4. Tester avec /test-api.html
5. Développer les nouvelles fonctionnalités

================================================================================
                            🎯 PROCHAINES ÉTAPES
================================================================================

📋 TODO :
- [ ] Ajouter la validation des données côté serveur
- [ ] Implémenter la gestion des sessions
- [ ] Ajouter les logs de sécurité
- [ ] Créer les tests unitaires
- [ ] Configurer l'environnement de production
- [ ] Ajouter la documentation API complète

================================================================================
                            ✅ CHECKLIST DÉVELOPPEMENT
================================================================================

☐ Base de données PostgreSQL installée et configurée
☐ Fichier .env créé avec les bonnes variables
☐ Dépendances installées (npm install)
☐ Administrateur créé (npm run setup-admin)
☐ Serveur démarré (npm run dev)
☐ API testée (test-api.html)
☐ Frontend accessible
☐ Connexion admin fonctionnelle

================================================================================
                            🎉 BON DÉVELOPPEMENT !
================================================================================

Ce fichier contient toutes les informations essentielles pour le développement.
Gardez-le à portée de main et mettez-le à jour si nécessaire.

Dernière mise à jour : 2024-06-20 